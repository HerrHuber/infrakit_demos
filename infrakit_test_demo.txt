// infrakit better test demo
//    Started the plugins and learned to access them
//    Created a configuration for a group we wanted to manage
//    Verified the instances created matched the specifications
//    Updated the configurations of the group and scaled up the group
//    Reviewed the proposed changes
//    Applied the update across the group
//    Removed some instances and observed that the group self-healed
//    Destroyed the group


// start container
docker run -it chungers/infrakit-bundle /bin/sh

//    Started the plugins and learned to access them
mkdir -p tut
infrakit-group-default &
infrakit-instance-file --dir ./tut &
infrakit-flavor-vanilla &
infrakit plugin ls

//    Created a configuration for a group we wanted to manage
vi cattle.json
{
  "ID": "cattle",
  "Properties": {
    "Allocation": {
      "Size": 5
    },
    "Instance": {
      "Plugin": "infrakit-instance-file",
      "Properties": {
        "Note": "Instance properties version 1.0"
      }
    },
    "Flavor": {
      "Plugin": "infrakit-flavor-vanilla",
      "Properties": {
        "Init": [
          "docker pull nginx:alpine",
          "docker run -d -p 80:80 nginx-alpine"
        ],
        "Tags": {
          "tier": "web",
          "project": "infrakit"
        }
      }
    }
  }
}

//    Verified the instances created matched the specifications
infrakit instance describe --name infrakit-instance-file
infrakit group watch cattle.json --name infrakit-group-default
infrakit group describe cattle.json --name infrakit-group-default
infrakit instance describe --name infrakit-instance-file

//    Updated the configurations of the group and scaled up the group
infrakit group unwatch cattle.json --name infrakit-group-default
infrakit group watch cattle.json --name infrakit-group-default
infrakit group describe-groups --name infrakit-group-default
vi cattle2.json
{
  "ID": "cattle",
  "Properties": {
    "Allocation": {
      "Size": 10
    },
    "Instance": {
      "Plugin": "instance-file",
      "Properties": {
        "Note": "Instance properties version 2.0"
      }
    },
    "Flavor": {
      "Plugin": "flavor-vanilla",
      "Properties": {
        "Init": [
          "docker pull nginx:alpine",
          "docker run -d -p 80:80 nginx-alpine"
        ],
        "Tags": {
          "tier": "web",
          "project": "infrakit"
        }
      }
    }
  }
}

//    Reviewed the proposed changes
diff cattle.json cattle2.json

//    Applied the update across the group
infrakit group update cattle2.json --name infrakit-group-default
infrakit group describe cattle --name infrakit-group-default

//    Removed some instances and observed that the group self-healed
rm tut/...

//    Destroyed the group
infrakit group destroy cattle --name infrakit-group-default

=======================================

// Infrakit test demo
// startet ubuntu in docker mit infrakit installation
// lädt alle plugins und startet 5 instancen


// 1. start container with infrakit install
docker run -i -t ajeetraina/infrakit /bin/bash

// 2. open shell into container
//docker exec -i -t ajeetraina/infrakit /bin/bash

// 3. look at the config file
cat collabnix.json

// 4. create directory for instances
mkdir collabnix

// 5. start instance plugin
//	called collabnix-instance
docker exec -i -t ajeetraina/infrakit build/infrakit-instance-file —-name=collabnix-instance —-dir=./collabnix/

// 6. start flavor plugin
docker exec -i -t ajeetraina/infrakit build/infrakit-flavor-vanilla

// 7. start group plugin
docker exec -i -t ajeetraina/infrakit build/infrakit-group-default

// 
//build/infrakit instance describe —-name=collabnix-instance

// 8. start watching group
docker exec -i -t ajeetraina/infrakit build/infrakit group watch collabnix.json

// look at instances
ls collabnix

// delete one instance
rm collabnix/....

// infrakit should restart instance automatically
ls collabnix




// Fragen zu Infrakit
how to end infrakit
how to make a plugin/does a plugin has to be in go
what are all the tags for plugin json config
what is infrakit for?
	ein toolkit für infrastruktur orchestration
	cluster infrastruktur einfach und porabel machen
	managen von low level infrastruktur für jedes mögliche cluster
	"scaling groups" health managemant für instancen
	make it easyer to install docker on a veriaty of environments
	cloudproviders, common plattforms
	a toolkit for infrastructur orchestration
what is infrakit not
	coupled to docker
	a configuration managment system (e.g Terraform)
	alternative zu Swarm/Kubernetes(wie machst du dein cluster setup->infrakit)
Was macht infrakit besonders
	benutzer definiert wie cluster aussehen soll, 
		ifrakit sagt wie es diesen Zustand erreicht
	es schaut konstant ob dieser definierte zustand noch ist
	immutable??? => plugins
	roling update
Plugins (siehe bild infrakit_plugin_example)
	instance
		eine resourcen einheit z.B. EC2 instance
		how to create, delete, list resourcen
	group
		zusammenfassung von instancen
		managen von einer group als eine resource (auto scaling group nutzen)
	flavor
		modifizieren einer instance
		z.B. etwas configurieren, installieren, swarm join
	infrakit versteht nur group plugins, 
		alle anderen plugins basieren auf default groupplugin
flavor-vanilla plugin: injects code to an instance

Konkurenz:
	AWS cloud formation, erreicht einpaar ziele wie infrakit aber AWS spezifisch
unterschied swarm -- infrakit
	swarm:
		services, netzwerk, application management
	infrakit:
		plattform unabhängiger weg diese features up zu setten
	terraform:
		einzelne maschinen
	infrakit:
		gruppen von meherern maschinene, clusters
		aktives management
